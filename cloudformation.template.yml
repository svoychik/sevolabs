
AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template

Resources:
  SevolabscomBucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: 'sevolabs.com'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
      VersioningConfiguration:
        Status: Enabled

  SevolabscomBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: SevolabscomBucket
    Properties:
      Bucket: !Ref SevolabscomBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref SevolabscomBucket
                - /*
            Principal: '*'

  
  # SevolabsOriginAccessIdentity:
  #   Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
  #   Properties: 
  #     CloudFrontOriginAccessIdentityConfig: 
  #       CloudFrontOriginAccessIdentityConfig

  SevolabsCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: sevolabs.com.s3-website-eu-west-1.amazonaws.com
            Id: s3-sevolabs.com
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: http-only
        Enabled: true
        DefaultRootObject: index.html
        Aliases: 
          - test2.sevolabs.com
        DefaultCacheBehavior:
          TargetOriginId: s3-sevolabs.com
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
        ViewerCertificate:
          AcmCertificateArn: 'arn:aws:acm:us-east-1:403117364727:certificate/67eac6fe-828b-466d-847e-8ddf540b2179'
          SslSupportMethod: sni-only
        IPV6Enabled: true

  SevolabsWebRecord: 
    Type: 'AWS::Route53::RecordSet'
    DependsOn: SevolabsCloudfrontDistribution
    Properties:
      Name: 'sevolabs.com.'
      Type: 'AAAA'
      # HostedZoneId is for ID for 'naaaaa.com.'; In theory its valid to use `HostedZoneName` OR `HostedZoneId`
      # but in practice the recordset always failed to create if I used `HostedZoneName`
      # HostedZoneName: 'sevolabs.com.'
      HostedZoneId: 'Z06284668V08ZMMMLPS5'
     #SetIdentifier: 'website'
     #Region: 'eu-west-1'
      AliasTarget:
        DNSName: !GetAtt SevolabsCloudfrontDistribution.DomainName
        # For CloudFront, HostedZoneId is always Z2FDTNDATAQYW2, see:
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid
        HostedZoneId: 'Z2FDTNDATAQYW2'
